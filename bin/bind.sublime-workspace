{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"io",
				"io_service"
			],
			[
				"err",
				"error_code\terror_code"
			],
			[
				"de",
				"deadline_timer\tdeadline_timer"
			],
			[
				"time",
				"deadline_timer\tdeadline_timer"
			],
			[
				"as",
				"async_wait\ttypename ::boost::asio::async_result<typename ::boost::asio::handler_type<WaitHandler, void (boost::system::error_code)>::type>::type async_wait(WaitHandler &&handler)"
			],
			[
				"temp_",
				"temp_sec\tchar*"
			],
			[
				"ME",
				"ME_SINGLETON<typename T>\tclass"
			],
			[
				"init",
				"init_flag\tpthread_once_t"
			],
			[
				"filen",
				"fileno(FILE *__stream)\tint"
			],
			[
				"pr",
				"print1()\tvoid"
			],
			[
				"sll_in",
				"sll_insert_template(node **rootp, const char *value, int (*cmp)(const void *, const void *))\tbool"
			],
			[
				"pri",
				"print_double_list(node *rootp)\tvoid"
			],
			[
				"sll",
				"sll_insert_new(node **rootp, int value)\tbool"
			],
			[
				"I",
				"INIT_t\tstruct"
			],
			[
				"temp",
				"temp_str\tconst char*"
			],
			[
				"func",
				"func3(int (*matrix)[5])\tvoid"
			],
			[
				"fpr",
				"fprintf(FILE *__restrict __stream, const char *__restrict __format, ...)\tint"
			],
			[
				"string",
				"string_cpy(char *dst, const char *src)\tvoid"
			],
			[
				"uint",
				"uint32_t\ttypedef"
			],
			[
				"f",
				"first"
			],
			[
				"ins",
				"inserter(_Container &__x, _Iterator __i)\tinsert_iterator<_Container>"
			],
			[
				"back",
				"back_inserter(_Container &__x)\tback_insert_iterator<_Container>"
			],
			[
				"back_",
				"back_insert_iterator<typename _Container>\tclass"
			],
			[
				"erase",
				"erase(const key_type &__x)\tsize_type"
			],
			[
				"remove_cop",
				"remove_copy_if(_InputIterator __first, _InputIterator __last, _OutputIterator __result, _Predicate __pred)\t_OutputIterator"
			],
			[
				"mu",
				"multiset<typename _Key>\tclass"
			],
			[
				"earse",
				"erase(const_iterator __first, const_iterator __last)\titerator"
			],
			[
				"part",
				"partial_sort_copy(_IIter, _IIter, _RAIter, _RAIter, _Compare)\t_RAIter"
			],
			[
				"sort",
				"sort(_RAIter, _RAIter)\tvoid"
			],
			[
				"insert",
				"inserter(_Container &__x, _Iterator __i)\tinsert_iterator<_Container>"
			],
			[
				"front_insert",
				"front_inserter(_Container &__x)\tfront_insert_iterator<_Container>"
			],
			[
				"gre",
				"greate_<typename T>\tclass"
			],
			[
				"reverse",
				"reverse(_BidirectionalIterator __first, _BidirectionalIterator __last)\tvoid"
			],
			[
				"unique",
				"unique(_ForwardIterator __first, _ForwardIterator __last, _BinaryPredicate __binary_pred)\t_ForwardIterator"
			],
			[
				"rotate",
				"rotate_copy(_ForwardIterator __first, _ForwardIterator __middle, _ForwardIterator __last, _OutputIterator __result)\t_OutputIterator"
			],
			[
				"replace_c",
				"replace_copy(_InputIterator __first, _InputIterator __last, _OutputIterator __result, const _Tp &__old_value, const _Tp &__new_value)\t_OutputIterator"
			],
			[
				"sec",
				"second"
			],
			[
				"generate",
				"generate(_ForwardIterator __first, _ForwardIterator __last, _Generator __gen)\tvoid"
			],
			[
				"adj",
				"adjacent_find(_ForwardIterator __first, _ForwardIterator __last, _BinaryPredicate __binary_pred)\t_ForwardIterator"
			],
			[
				"partati",
				"partition(_ForwardIterator __first, _ForwardIterator __last, _Predicate __pred)\t_ForwardIterator"
			],
			[
				"copy",
				"copy(_IIter, _IIter, _OIter)\t_OIter"
			],
			[
				"vec",
				"vector<typename _Tp>\tclass"
			],
			[
				"inser",
				"inserter(_Container &__x, _Iterator __i)\tinsert_iterator<_Container>"
			],
			[
				"partial_su",
				"partial_sum(_InputIterator __first, _InputIterator __last, _OutputIterator __result, _BinaryOperation __binary_op)\t_OutputIterator"
			],
			[
				"unord",
				"unordered_set<class _Value>\tclass"
			],
			[
				"vector",
				"vector<typename _Tp>\tclass"
			],
			[
				"n",
				"next"
			],
			[
				"back_in",
				"back_inserter(_Container &__x)\tback_insert_iterator<_Container>"
			],
			[
				"find",
				"find_first_not_of(_CharT __c) const\ttypename basic_string<_CharT, _Traits, _Alloc>::size_type"
			],
			[
				"ob",
				"obj\tconst Iterator"
			],
			[
				"p",
				"ptr\tIter *"
			],
			[
				"iteraot",
				"iterator<typename _Category, typename _Tp>\tclass"
			],
			[
				"del",
				"del(I i1, I i2)\ttypename iterator_traits<I>::difference_type"
			],
			[
				"free",
				"free_allocate(T *t)\tvoid"
			],
			[
				"in",
				"insert(_Pair &&__x)\tstd::pair<iterator, bool>"
			],
			[
				"ostream",
				"ostream_iterator<typename _Tp>\tclass"
			],
			[
				"istrea",
				"istream_iterator<typename _Tp>\tclass"
			],
			[
				"next",
				"next_permutation(_BIter, _BIter)\tbool"
			],
			[
				"begin",
				"begin()\titerator"
			],
			[
				"deq",
				"deque<typename _Tp>\tclass"
			],
			[
				"pthread_once",
				"pthread_once(pthread_once_t *__once_control, void (*__init_routine)())\tint"
			],
			[
				"pthread_key",
				"pthread_key_delete(pthread_key_t __key)\tint"
			],
			[
				"pthread_create",
				"pthread_key_create(pthread_key_t *__key, void (*__destr_function)(void *))\tint"
			],
			[
				"pthread_on",
				"pthread_once(pthread_once_t *__once_control, void (*__init_routine)())\tint"
			],
			[
				"PTHREAD_INIT",
				"PTHREAD_ONCE_INIT\tmacro"
			],
			[
				"T",
				"T_is_a_complete_class"
			],
			[
				"pthread_get",
				"pthread_getspecific(pthread_key_t __key)\tvoid *"
			],
			[
				"pthread_k",
				"pthread_key_create(pthread_key_t *__key, void (*__destr_function)(void *))\tint"
			],
			[
				"thread",
				"threadio_num_\tint"
			],
			[
				"run",
				"running\tbool"
			],
			[
				"pus",
				"push_back"
			],
			[
				"e",
				"empty"
			],
			[
				"tas",
				"tasks_\tint"
			],
			[
				"uniq",
				"unique_lock<typename _Mutex>\tclass"
			],
			[
				"max",
				"max_sz\tint"
			],
			[
				"task",
				"tasks_\tdeque<TASK>"
			],
			[
				"wait",
				"wait_task\tstd::condition_variable"
			],
			[
				"pop",
				"pop_front()\tvoid"
			],
			[
				"F",
				"Foo\tclass"
			],
			[
				"obser",
				"observer"
			],
			[
				"swap",
				"swap(_Tp &, _Tp &)\tvoid"
			],
			[
				"observ",
				"observers\tstd::vector<observer *>"
			],
			[
				"obse",
				"observers\tstd::vector<observer *>"
			],
			[
				"o",
				"observers\tstd::vector<observer *>"
			],
			[
				"mem",
				"memory_order_release\tstd::memory_order"
			],
			[
				"atomi",
				"atomic<typename _Tp>\tclass"
			],
			[
				"ato",
				"atomic<typename _Tp>\tclass"
			],
			[
				"logic_er",
				"__throw_logic_error(const char *)\tvoid"
			],
			[
				"w",
				"wait_for(const chrono::duration<_Rep, _Period> &__rel) const\tstd::future_status"
			],
			[
				"asy",
				"async(_Fn &&__fn, _Args &&__args...)\tfuture<typename result_of<_Fn (_Args...)>::type>"
			],
			[
				"print",
				"print_int(future<int> &fus)\tvoid"
			],
			[
				"future",
				"future<typename _Res>\tclass"
			],
			[
				"se",
				"set_exception(std::__exception_ptr::exception_ptr __p)\tvoid"
			],
			[
				"pro",
				"prom\tpromise<int> &"
			],
			[
				"promi",
				"promise<typename _Res>\tclass"
			],
			[
				"i",
				"iterator"
			],
			[
				"dns",
				"dns_entry\tclass"
			],
			[
				"map",
				"map<typename _Key, typename _Tp>\tclass"
			],
			[
				"ent",
				"entries\tmap<string, dns_entry>"
			],
			[
				"entr",
				"entries\tmap<string, dns_entry>"
			],
			[
				"j",
				"join()\tvoid"
			],
			[
				"ori",
				"originalcode"
			],
			[
				"res",
				"result_cat"
			],
			[
				"fin",
				"fin_eth"
			],
			[
				"chan",
				"change_flag"
			],
			[
				"MAX_",
				"MAX_ALERT_LENGTH"
			],
			[
				"re",
				"result"
			],
			[
				"fin_",
				"fin_eth"
			],
			[
				"strc",
				"strcpy"
			],
			[
				"max_",
				"MAX_URL_LEN"
			],
			[
				"tem",
				"temp_eth"
			],
			[
				"te",
				"temp_ip"
			],
			[
				"red",
				"redirect_ip"
			],
			[
				"re_",
				"re_ip"
			],
			[
				"redire",
				"redirect_ip"
			],
			[
				"eth",
				"ethx"
			],
			[
				"redi",
				"redirect_url"
			],
			[
				"nu",
				"next_fortune"
			],
			[
				"gf",
				"GFP_KERNEL"
			],
			[
				"header",
				"http_redirect_header"
			],
			[
				"len",
				"len_redirect"
			],
			[
				"alert",
				"alert_port"
			],
			[
				"ker",
				"KERN_ALERT"
			],
			[
				"http",
				"http_redirect_header"
			],
			[
				"ke",
				"KERN_ALERT"
			],
			[
				"prin",
				"printk"
			],
			[
				"ip",
				"ip_buff"
			],
			[
				"ALERT",
				"alert_port"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "Package Control: ",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"package control ins",
				"Package Control: Install Package"
			],
			[
				"package control in",
				"Package Control: Install Package"
			],
			[
				"sublimecl",
				"Preferences: SublimeClang Settings â€“ User"
			],
			[
				"package control ns",
				"Package Control: Install Package"
			]
		],
		"width": 497.0
	},
	"console":
	{
		"height": 150.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib2,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler()) ); by = urllib2.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); open( os.path.join( ipp, pf), 'wb' ).write(by) if dh == h else None; print('Error validating download (got %s instead of %s), please try manual install' % (dh, h) if dh != h else 'Please restart Sublime Text to finish installation')",
			"install",
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"install",
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/router/Documents/boost_asio/posix_time/bin/bind",
		"/home/router/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/router/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/router/.config/sublime-text-3/Packages/User/EasyClangComplete.sublime-settings",
		"/home/router/.config/sublime-text-3/Packages/EasyClangComplete/EasyClangComplete.sublime-settings",
		"/home/router/.config/sublime-text-3/Packages/Package Control/Package Control.sublime-settings",
		"/home/router/Documents/boost_asio/posix_time/CMakeLists.txt",
		"/home/router/.config/sublime-text-3/Packages/User/YcmdCompletion.sublime-settings",
		"/home/router/.config/sublime-text-3/Packages/YcmdCompletion/YcmdCompletion.sublime-settings",
		"/home/router/.config/sublime-text-3/Packages/ClangAutoComplete/ClangAutoComplete.sublime-settings",
		"/home/router/.config/sublime-text-3/Packages/SublimeClang/SublimeClang.sublime-settings",
		"/home/router/Documents/boost_asio/posix_time/bind.cc",
		"/home/router/Documents/boost_asio/posix_time.cc",
		"/home/router/Documents/boost_learning/boost_any.cc",
		"/home/router/Documents/c++_oop/variadic_templates.cc",
		"/home/router/Documents/c++_oop/static.cc",
		"/home/router/Documents/algorithm/momove.c",
		"/home/router/Documents/algorithm/permutation.cc",
		"/home/router/Documents/algorithm/permutation.c",
		"/home/router/Documents/algorithm/momove.cc",
		"/home/router/Documents/use_muduo/shared_ptr.cc",
		"/home/router/Documents/c_and_pointer/string.cc",
		"/home/router/Documents/c_and_pointer/operator.cc",
		"/home/router/Documents/muduo/muduo-master/muduo/net/Channel.h",
		"/home/router/Documents/muduo_example/sudoku/sudoku.cc",
		"/home/router/Documents/muduo_example/sudoku/sudoku_mythread.cc",
		"/home/router/Documents/c_and_pointer/char.cc",
		"/home/router/Documents/c_and_pointer/count_one_bit_.cc",
		"/home/router/Documents/c_and_pointer/test.cc",
		"/home/router/Documents/leetcode/48. Rotate Image.cc",
		"/home/router/Documents/leetcode/47. Permutations II.cc",
		"/home/router/Documents/stl_learning/functor.cc",
		"/home/router/Documents/stl_learning/hash_set.cc",
		"/home/router/Documents/stl_learning/learning_stl.cc",
		"/home/router/Documents/muduo_example/thread_local/threadlocalsingleton.cc",
		"/home/router/Documents/muduo_example/thread_local/Sinleton.cc",
		"/home/router/Documents/muduo_example/thread_local/try.cc",
		"/home/router/Documents/muduo_example/thread_local/pthread_local.cc",
		"/home/router/Documents/muduo_example/chat_server/chat_server_effective.cc",
		"/home/router/Documents/effective_stl/iterator.cc",
		"/home/router/Documents/leetcode/43. Multiply Strings.cc",
		"/home/router/Documents/offer/singleton.cc",
		"/home/router/Documents/leetcode/100. Same Tree.cc",
		"/home/router/Documents/stl_learning/sizeof8.cc",
		"/home/router/Documents/stl_learning/reverse.cc",
		"/home/router/Documents/stl_learning/remove_container.cc",
		"/home/router/Documents/leetcode/54. Spiral Matrix.cc",
		"/home/router/Documents/c_and_pointer/hello.cc",
		"/home/router/Documents/leetcode/49. Group Anagrams.cc",
		"/home/router/Documents/leetcode/53. Maximum Subarray.cc",
		"/home/router/Documents/stl_learning/next_permutation.cc",
		"/home/router/Documents/stl_learning/define.cc",
		"/home/router/Documents/c_and_pointer/test_function.c",
		"/home/router/Documents/c_and_pointer/singleton.cc",
		"/home/router/Documents/c_and_pointer/ count_one_bit.cc",
		"/home/router/Documents/c_and_pointer/the_num_of_1.cc",
		"/home/router/Documents/stl_learning/template.cc",
		"/home/router/Documents/muduo_example/chat_server/chat_server_highperform.cc",
		"/home/router/Documents/leetcode/46. Permutations.cc",
		"/home/router/Documents/stl_learning/example.cc",
		"/home/router/Documents/stl_learning/test_stl.cc",
		"/home/router/Documents/stl_learning/free_list.cc",
		"/home/router/Documents/muduo_example/thread_pool/laji.hpp",
		"/home/router/Documents/stl_learning/stl_test.cc",
		"/home/router/Documents/stl_learning/iterator.cc",
		"/home/router/Documents/leetcode/41. First Missing Positive.cc",
		"/home/router/Documents/leetcode/31. Next Permutation.cc",
		"/home/router/Documents/leetcode/39. Combination Sum.cc",
		"/home/router/Documents/offer/operator=.cc",
		"/home/router/Documents/muduo_example/timing wheel/circuit_buffer.cc",
		"/home/router/Documents/offer/edian.cc",
		"/home/router/Documents/muduo_example/thread_local/pthread_local.hpp",
		"/home/router/Documents/muduo_example/sudoku/laji.hpp",
		"/home/router/Documents/muduo_example/sudoku/multi_io_multi_compute.cc",
		"/home/router/Documents/muduo_example/sudoku/CMakeLists.txt",
		"/home/router/Documents/muduo_example/sudoku/thread_pool.cc",
		"/home/router/Documents/muduo_example/thread_pool/thread_pool.hpp",
		"/home/router/Documents/muduo_example/thread_pool/thread_pool.cc",
		"/home/router/Documents/muduo_example/thread_pool/testmuduo.cc",
		"/home/router/Documents/muduo_example/thread_pool/main.cc",
		"/home/router/Documents/muduo_example/thread_pool/laji.cc",
		"/home/router/Documents/laji.cc",
		"/home/router/Documents/muduo_example/sudoku/sudoku_threadpool.cc",
		"/home/router/Documents/muduo/muduo-master/muduo/base/ThreadPool.h",
		"/home/router/Documents/muduo_example/thread_pool/test.cc",
		"/home/router/Documents/c++concurrency/gui.cc",
		"/home/router/Documents/c++concurrency/future.cc",
		"/home/router/Documents/c++concurrency/mutex.cc",
		"/home/router/Documents/muduo/muduo-master/muduo/base/ThreadPool.cc",
		"/home/router/Documents/muduo_example/thread_pool/thread_pool.h",
		"/home/router/Documents/c++concurrency/thread_guard.hpp",
		"/home/router/Documents/muduo_example/thread_pool/stl.cc",
		"/home/router/Documents/c++concurrency/dns_entry.cc",
		"/home/router/Documents/c++concurrency/shared_future.cc",
		"/home/router/Documents/recipes-master/thread/Thread.h",
		"/home/router/Documents/recipes-master/thread/test/MutualDeadLock.cc",
		"/home/router/Documents/recipes-master/thread/test/Factory_deadlock.cc",
		"/home/router/Documents/recipes-master/thread/test/Factory.cc",
		"/home/router/Documents/recipes-master/thread/test/Customer.cc",
		"/home/router/Documents/recipes-master/thread/test/CopyOnWrite_test.cc",
		"/home/router/Documents/c++concurrency/packaged_task.cc",
		"/home/router/Documents/c++concurrency/promise.cc",
		"/home/router/Documents/c++concurrency/exception_for_future.cc",
		"/home/router/Documents/c++concurrency/packaged_task_future.cc",
		"/home/router/Documents/c++concurrency/atomic.cc",
		"/home/router/Documents/recipes-master/thread/test/Observer.cc",
		"/home/router/Documents/recipes-master/thread/test/BoundedBlockingQueue_test.cc",
		"/home/router/Documents/recipes-master/thread/Singleton.h",
		"/home/router/Documents/recipes-master/thread/Thread.cc",
		"/home/router/Documents/recipes-master/thread/Mutex.h",
		"/home/router/Documents/recipes-master/thread/test/Atomic_unittest.cc",
		"/home/router/Documents/c++concurrency/getdata_promise.cc",
		"/home/router/.config/sublime-text-3/Packages/User/SublimeClang.sublime-settings",
		"/home/router/Documents/ajax_hook_ipv4/16.04-206/hook_ipv4_twice.c",
		"/home/router/Documents/ajax_hook_ipv4/ajajx_hashtable/hook_ipv4_twice.c",
		"/home/router/Documents/ajax_hook_ipv4/hook_ipv4_hashtable/hook_ipv4_hashtable.c",
		"/home/router/Desktop/hook_ipv4_hashtable/hook_ipv4_hashtable.c",
		"/home/router/Desktop/test.cc",
		"/home/router/Desktop/echo_libcap/test.c",
		"/home/router/Desktop/proc/test/test.c",
		"/home/router/Desktop/10.19change/allversion/10.14xiugai/16.04-206/hook_ipv4_twice.c",
		"/home/router/Desktop/10.19change/allversion/10.19jiayasuo/hook_ipv4_twice.c",
		"/home/router/Desktop/proc/hash_two_module_cat/test.c",
		"/home/router/Desktop/proc/hash_11.3/hashtable.c",
		"/home/router/Desktop/proc/ajaxä¸¤ä¸ªå­—ç¬¦ä¸²/test.c",
		"/home/router/Desktop/echo_target_change_packet/hook_url_filter.c",
		"/home/router/Desktop/change_packet/hook_url_filter.c",
		"/home/router/Desktop/libcap/send_newpage.c"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 110.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "bind.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 227.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
